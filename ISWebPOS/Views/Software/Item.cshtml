
@{
    ViewBag.Title = "Item";
}

<!DOCTYPE html>
<html>
<!-- ADD THE CLASS sidedar-collapse TO HIDE THE SIDEBAR PRIOR TO LOADING THE SITE -->
<body class="hold-transition skin-blue sidebar-collapse sidebar-mini">
    <!-- Site wrapper -->
    <div class="wrapper">

        
        @Html.Partial("_MainHeader")
        @Html.Partial("_MainSidebar")

        

        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <section class="content-header">
                <h1 class="fa fa-table">
                    Item List
                </h1>
                <ol class="breadcrumb">
                    <li><a href="../Software/Dashboard"><i class="fa fa-table"></i> Home</a></li>
                    <li class="active">Item</li>
                </ol>
            </section>
             <section class="content">
                 <div class="row">
                     <div class="col-xs-12">
                         
                         <!--table container-->
                         <div class="box">
                             
                             <div class="row">
                                 
                                <div class="box-header">
                                    <div class="col-md-6">
                                        <!--search box-->
                                        <div class="box-tools">
                                            <div class="input-group" style="width: 150px;">
                                                <input type="text" name="table_search" class="form-control input-sm" placeholder="Search">
                                                <div class="input-group-btn">
                                                    <button class="btn btn-sm btn-default"><i class="fa fa-search"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <a href="~/Software/AddItem" class="btn btn-primary btn-sm pull-right"><i class="fa fa-plus"></i> Add</a>
                                    </div>
                                </div>
                            </div>
                                 <!--table-->
                                 <table id="itemCollectionGrid" class="grid border-custom"></table>

                             </div>
                     </div>
                  </div>
                 <!--navigation buttons-->
                 <div class="btn-group pull-right" id="navigationPageGrid">
                     <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                         <span class="glyphicon glyphicon-fast-backward"></span>
                     </button>
                     <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                         <span class="glyphicon glyphicon-step-backward"></span>
                     </button>
                     <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                     <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                         <span class="glyphicon glyphicon-step-forward"></span>
                     </button>
                     <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                         <span class="glyphicon glyphicon-fast-forward"></span>
                     </button>
                 </div>
        </section>            
        </div><!-- ./wrapper -->
        
        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                Modal content
                <div class="modal-content">
                    <div class="modal-body">
                        <h4 style="text-align:center">Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div> 

        @Html.Partial("_MainFooter")

        </div>

    <script type="text/javascript">

        //================
        // Global variables
        // ================
        var itemCollections;
        var itemGrid;

        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // =============================
        // Get ItemMasterList Data
        // ============================= 
        function getItemMasterList() {
            var ItemList = new wijmo.collections.ObservableArray();
            $("#loadingModal").modal("show");
            $.ajax({

                url: '/api/item/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    $("#loadingModal").modal("hide");
                    /* var results = JSON.parse(result); */
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            ItemList.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='itemEditButton' onclick='cmdItemEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='itemDeleteButton' onclick='cmdItemDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                ItemCode: results[i]["ItemCode"],
                                BarCode: results[i]["BarCode"],
                                ItemDescription: results[i]["ItemDescription"],
                                Category: results[i]["Category"],
                                Price: results[i]["Price"],
                                OnhandQuantity: results[i]["OnhandQuantity"],
                                IsInventory: results[i]["IsInventory"],
                                isLocked: results[i]["isLocked"]

                            });
                        }
                        itemCollections = new wijmo.collections.CollectionView(ItemList);
                        btnCurrentPageGrid.innerHTML = (itemCollections.pageIndex + 1) + ' / ' + itemCollections.pageCount;

                        itemCollections.canFilter = true;
                        itemCollections.pageSize = 15;

                        //Flex Grid
                        itemGrid = new wijmo.grid.FlexGrid('#itemCollectionGrid');
                        itemGrid.initialize({
                            columns: [
							{
							    "header": "Edit",
							    "binding": "EditId",
							    "width": 60,
							    "align": "center",
							    "allowResizing": false,
							    "allowSorting": false,
							    "isContentHtml": true
							},
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "isContentHtml": true,
                                "width": "2*"
                            },
							{
							    "header": "Description",
							    "binding": "ItemDescription",
							    "allowSorting": true,
							    "width": "4*"
							},
                            {
                                "header": "Category",
                                "binding": "Category",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Bar Code",
                                "binding": "BarCode",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "isContentHtml": true,
                                "width": "2*"
                            },
                            {
                                "header": "Qty",
                                "binding": "OnhandQuantity",
                                "allowSorting": true,
                                "isContentHtml": true,
                                "width": "2*"
                            },
                            {
                                "header": "L",
                                "binding": "isLocked",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "I",
                                "binding": "IsInventory",
                                "allowSorting": true,
                                "width": "1.5*"
                            }],
                            autoGenerateColumns: false,
                            itemsSource: itemCollections,
                            isReadOnly: true,
                            selectionMode: wijmo.grid.SelectionMode.Row
                        });

                        itemGrid.trackChanges = true;

                        updateNavigateButtonsCollection();

                        btnFirstPageGrid.addEventListener('click', function () {
                            itemCollections.moveToFirstPage();
                            updateNavigateButtonsCollection();
                        });
                        btnPreviousPageGrid.addEventListener('click', function () {
                            itemCollections.moveToPreviousPage();
                            updateNavigateButtonsCollection();
                        });
                        btnNextPageGrid.addEventListener('click', function () {
                            itemCollections.moveToNextPage();
                            updateNavigateButtonsCollection();
                        });
                        btnLastPageGrid.addEventListener('click', function () {
                            itemCollections.moveToLastPage();
                            updateNavigateButtonsCollection();
                        });
                    } else {
                        /*   alert("No data."); */
                    }
                }
            });
        }
        // ==================
        // Navigation Buttons
        // ==================   
        function updateNavigateButtonsCollection() {
            if (itemCollections.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (itemCollections.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (itemCollections.pageIndex === (itemCollections.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (itemCollections.pageIndex + 1) + ' / ' + itemCollections.pageCount;

        }


        //============
        // On Page Load
        // ============
        $(document).ready(function () {

            // Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            //Collection View
            getItemMasterList();

        });
    </script>


</body>
</html>

