
<div class="box box-info">
    <div class="content">
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <!--table container-->
                    <div class="box">
                        <div class="row">
                            <div class="box-header">
                                <div class="col-md-6">
                                    <!--search box-->
                                    <div class="box-tools">
                                        <div class="input-group" style="width: 150px;">
                                            <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-default"><i class="fa fa-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="btn-group-horizontal btn-sm pull-right">
                                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#addTerminal"><i class="fa fa-plus"></i>Add</button>
                                </div>
                            </div>
                        </div>
                        <!--table-->
                        <table id="terminalCollectionGrid" class="grid border-custom"></table>
                        <!--navigation buttons-->
                        <div class="btn-group pull-right" id="navigationPageGrid">
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                <span class="glyphicon glyphicon-fast-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                <span class="glyphicon glyphicon-step-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid5"></button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                <span class="glyphicon glyphicon-step-forward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                <span class="glyphicon glyphicon-fast-forward"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div><!-- ./wrapper -->
    <!-- Terminal Delete -->
    <div class="modal fade" id="deleteTerminalConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Terminal? <i class="fa fa-trash"></i></h4>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteTerminal" onclick="cmdTerminalConfirmDeleteButton_OnClick()">Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Add Modal -->
    <div class="modal modal-primary" id="addTerminal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"><i class="fa fa-list"></i>Terminal</h4>
                </div>

                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-outline">Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <script type="text/javascript">

        //================
        // Global variables
        // ================
        var terminalCollections;
        var terminalGrid;
        var editTerminal;

        var btnFirstPageGrid5;
        var btnPreviousPageGrid5;
        var btnNextPageGrid5;
        var btnLastPageGrid5;
        var btnCurrentPageGrid5;
        var terminalResult;

        // =============================
        // Get TerminalMasterList Data
        // =============================
        function initTerminalList() {
            var results = terminalResult;
            var TerminalList = new wijmo.collections.ObservableArray();
            if (results.length > 0) {
                for (i = 0; i < results.length; i++) {
                    TerminalList.push({
                        EditId: "<button class='btn btn-primary btn-xs btn-block' id='terminalEditButton' onclick='cmdTerminalEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
                        DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='terminalDeleteButton' onclick='cmdTerminalDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                        Id: results[i]["Id"],
                        Terminal: results[i]["Terminal"],
                    });
                }
                terminalCollections = new wijmo.collections.CollectionView(TerminalList);
                btnCurrentPageGrid5.innerHTML = (terminalCollections.pageIndex + 1) + ' / ' + terminalCollections.pageCount;

                terminalCollections.canFilter = true;
                terminalCollections.pageSize = 15;

                //Filter
                var filterText = '';
                $('#InputFilter').keydown(function () {
                    filterText = this.value.toLowerCase();
                    terminalCollections.refresh();
                });
                terminalCollections.filter = function (terminal) {
                    return !filterText || (terminal.Terminal.toLowerCase().indexOf(filterText) > -1);
                }
                terminalCollections.collectionChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsCollectionTerminal();

                });
                terminalCollections.currentChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsCollectionTerminal();
                });


                //Flex Grid
                terminalGrid = new wijmo.grid.FlexGrid('#terminalCollectionGrid');
                terminalGrid.initialize({
                    columns: [


                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 60,
                        "align": "center",
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "isContentHtml": true

                    },
                    {
                        "header": "Terminal",
                        "binding": "Terminal",
                        "align": "center",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    }],
                    autoGenerateColumns: false,
                    itemsSource: terminalCollections,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                terminalGrid.trackChanges = true;

                updateNavigateButtonsCollectionTerminal();

                btnFirstPageGrid5.addEventListener('click', function () {
                    terminalCollections.moveToFirstPage();
                    updateNavigateButtonsCollectionTerminal();
                });
                btnPreviousPageGrid5.addEventListener('click', function () {
                    terminalCollections.moveToPreviousPage();
                    updateNavigateButtonsCollectionTerminal();
                });
                btnNextPageGrid5.addEventListener('click', function () {
                    terminalCollections.moveToNextPage();
                    updateNavigateButtonsCollectionTerminal();
                });
                btnLastPageGrid5.addEventListener('click', function () {
                    terminalCollections.moveToLastPage();
                    updateNavigateButtonsCollectionTerminal();
                });
            } else {
                /*   alert("No data."); */
            }

        }
        function getTerminalMasterList(callback) {
           
            $("#loadingModal").modal("show");
            $.ajax({
                url: '/api/terminal/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }

        // ===================
        // Terminal Edit Button
        // ===================
        function cmdTerminalEditButton_OnClick() {
            terminalCollections.editTerminal(terminalCollections.currentItem);

        }

        // =====================
        // Terminal delete Button
        // =====================
        function cmdTerminalDeleteButton_OnClick() {
            var id = terminalCollections.currentItem.Id;

            console.log(typeof id + id);

            $('#deleteTerminalConfirm').modal({
                show: true,
                backdrop: 'static'
            });
            $("#cmdConfirmDeleteTerminal").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
        }
            // =====================
        // Add Account Button
        // =====================
        function cmdaddTerminalButton_OnClick() {
            $('#addTerminal').modal({
                show: true,
                backdrop: 'static'
            });
        }
        // Terminal Confirm Delete Button
        function cmdTerminalConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteTerminal").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            //====================
            var id = terminalCollections.currentItem.Id;

            $.ajax({
                url: '/api/terminal/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteTerminal").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deleteTerminalConfirm').modal('hide');
                        $("#cmdConfirmDeleteTerminal").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $('#deleteTerminalConfirm').modal('hide');
                        $("#cmdConfirmDeleteTerminal").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==================
        // Navigation Buttons
        // ==================
        function updateNavigateButtonsCollectionTerminal() {
            if (terminalCollections.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (terminalCollections.pageIndex === 0) {
                btnFirstPageGrid5.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid5.setAttribute('disabled', 'disabled');
                btnNextPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.removeAttribute('disabled');
            } else if (terminalCollections.pageIndex === (accountCollections.pageCount - 1)) {
                btnFirstPageGrid5.removeAttribute('disabled');
                btnPreviousPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.setAttribute('disabled', 'disabled');
                btnNextPageGrid5.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid5.removeAttribute('disabled');
                btnPreviousPageGrid5.removeAttribute('disabled');
                btnNextPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.removeAttribute('disabled');
            }
            btnCurrentPageGrid5.innerHTML = (terminalCollections.pageIndex + 1) + ' / ' + terminalCollections.pageCount;

        }


        //============
        // On Page Load
        // ============
        $(document).ready(function () {

            // Navigation button
            btnFirstPageGrid5 = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid5 = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid5 = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid5 = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid5 = document.getElementById('btnCurrentPageGrid5');

            //Collection View
            getTerminalMasterList(function (results) {
                if (results && results.length > 0) {
                    terminalResult = results
                }
            });

        });
    </script>
</div>
