<div class="box box-info">
    <div class="content">
        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <!--table container-->
                    <div class="box">
                        <div class="row">
                            <div class="box-header">
                                <div class="col-md-6">
                                    <!--search box-->
                                    <div class="box-tools">
                                        <div class="input-group" style="width: 150px;">
                                            <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-default"><i class="fa fa-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="btn-group-horizontal btn-sm pull-right">
                                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#addPeriod"><i class="fa fa-plus"></i>Add</button>
                                </div>
                            </div>
                        </div>
                        <!--table-->
                        <table id="periodCollectionGrid" class="grid border-custom"></table>

                    </div>
                </div>
            </div>
            <!--navigation buttons-->
            <div class="btn-group pull-right" id="navigationPageGrid">
                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
        </section>
    </div><!-- ./wrapper -->
    <!-- Period Delete -->
    <div class="modal fade" id="deletePeriodConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Period? <i class="fa fa-trash"></i></h4>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeletePeriod" onclick="cmdPeriodConfirmDeleteButton_OnClick()">Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Add Modal -->
    <div class="modal modal-primary" id="addPeriod" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"><i class="fa fa-list"></i>Period</h4>
                </div>

                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-outline">Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <!-- Loading Modal -->
    <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class=" modal-dialog modal-sm">
            Modal content
            <div class="modal-content">
                <div class="modal-body">
                    <h4 style="text-align:center">Loading ...</h4>
                </div>
                <div class="modal-footer">
                    <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">

    //================
    // Global variables
    // ================
    var periodCollections;
    var periodGrid;
    var editPeriod;

    var btnFirstPageGrid5;
    var btnPreviousPageGrid5;
    var btnNextPageGrid5;
    var btnLastPageGrid5;
    var btnCurrentPageGrid;

    // =============================
    // Get PeriodMasterList Data
    // =============================
    function getPeriodMasterList() {
        var PeriodList = new wijmo.collections.ObservableArray();
        $("#loadingModal").modal("show");
        $.ajax({
            url: '/api/period/list',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (results) {
                $("#loadingModal").modal("hide");
                /* var results = JSON.parse(result); */
                if (results.length > 0) {
                    for (i = 0; i < results.length; i++) {
                        PeriodList.push({
                            EditId: "<button class='btn btn-primary btn-xs btn-block' id='periodEditButton' onclick='cmdPeriodEditButton_OnClick()'><i class='fa fa-pencil'></i> Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='periodDeleteButton' onclick='cmdPeriodDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                            Id: results[i]["Id"],
                            Period: results[i]["Period"],
                        });
                    }
                    periodCollections = new wijmo.collections.CollectionView(PeriodList);
                    btnCurrentPageGrid.innerHTML = (periodCollections.pageIndex + 1) + ' / ' + periodCollections.pageCount;

                    periodCollections.canFilter = true;
                    periodCollections.pageSize = 15;

                    //Filter
                    var filterText = '';
                    $('#InputFilter').keydown(function () {
                        filterText = this.value.toLowerCase();
                        periodCollections.refresh();
                    });
                    periodCollections.filter = function (period) {
                        return !filterText || (period.Period.toLowerCase().indexOf(filterText) > -1);
                    }
                    periodCollections.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsCollectionPeriod();

                    });
                    periodCollections.currentChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsCollectionPeriod();
                    });


                    //Flex Grid
                    periodGrid = new wijmo.grid.FlexGrid('#periodCollectionGrid');
                    periodGrid.initialize({
                        columns: [


                        {
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 60,
                            "align": "center",
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 70,
                            "align": "center",
                            "isContentHtml": true

                        },
                        {
                            "header": "Period",
                            "binding": "Period",
                            "align": "center",
                            "allowSorting": true,
                            "isContentHtml": true,
                            "width": "2*"
                        }],
                        autoGenerateColumns: false,
                        itemsSource: periodCollections,
                        isReadOnly: true,
                        autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                        allowDragging: wijmo.grid.AllowDragging.None,
                        selectionMode: wijmo.grid.SelectionMode.Row
                    });

                    periodGrid.trackChanges = true;

                    updateNavigateButtonsCollectionPeriod();

                    btnFirstPageGrid5.addEventListener('click', function () {
                        periodCollections.moveToFirstPage();
                        updateNavigateButtonsCollectionPeriod();
                    });
                    btnPreviousPageGrid5.addEventListener('click', function () {
                        periodCollections.moveToPreviousPage();
                        updateNavigateButtonsCollectionPeriod();
                    });
                    btnNextPageGrid5.addEventListener('click', function () {
                        periodCollections.moveToNextPage();
                        updateNavigateButtonsCollectionPeriod();
                    });
                    btnLastPageGrid5.addEventListener('click', function () {
                        periodCollections.moveToLastPage();
                        updateNavigateButtonsCollectionPeriod();
                    });
                } else {
                    /*   alert("No data."); */
                }
            }
        });
    }

        // ===================
        // Period Edit Button
        // ===================
        function cmdPeriodEditButton_OnClick() {
            periodCollections.editPeriod(periodCollections.currentItem);

        }

        // =====================
        // Period delete Button
        // =====================
        function cmdPeriodDeleteButton_OnClick() {
            var id = periodCollections.currentItem.Id;

            console.log(typeof id + id);

            $('#deletePeriodConfirm').modal({
                show: true,
                backdrop: 'static'
            });
            $("#cmdConfirmDeletePeriod").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
        }
            // =====================
        // Add Account Button
        // =====================
        function cmdaddPeriodButton_OnClick() {
            $('#addPeriod').modal({
                show: true,
                backdrop: 'static'
            });
        }
        // Period Confirm Delete Button
        function cmdPeriodConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeletePeriod").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            //====================
            var id = periodCollections.currentItem.Id;

            $.ajax({
                url: '/api/period/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeletePeriod").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletePeriodConfirm').modal('hide');
                        $("#cmdConfirmDeletePeriod").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $('#deletePeriodConfirm').modal('hide');
                        $("#cmdConfirmDeletePeriod").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==================
        // Navigation Buttons
        // ==================
        function updateNavigateButtonsCollectionPeriod() {
            if (periodCollections.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (periodCollections.pageIndex === 0) {
                btnFirstPageGrid5.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid5.setAttribute('disabled', 'disabled');
                btnNextPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.removeAttribute('disabled');
            } else if (periodCollections.pageIndex === (periodCollections.pageCount - 1)) {
                btnFirstPageGrid5.removeAttribute('disabled');
                btnPreviousPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.setAttribute('disabled', 'disabled');
                btnNextPageGrid5.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid5.removeAttribute('disabled');
                btnPreviousPageGrid5.removeAttribute('disabled');
                btnNextPageGrid5.removeAttribute('disabled');
                btnLastPageGrid5.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (periodCollections.pageIndex + 1) + ' / ' + periodCollections.pageCount;

        }


        //============
        // On Page Load
        // ============
        $(document).ready(function () {

            // Navigation button
            btnFirstPageGrid5 = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid5 = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid5 = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid5 = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            //Collection View
            getPeriodMasterList();

        });
    </script>
</div>
